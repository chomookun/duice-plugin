{"version":3,"file":"duice-ckeditor.min.js","sources":["CkeditorElement.js","CkeditorElementFactory.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ObjectElement } from \"duice\";\nimport { PropertyChangingEvent } from \"duice\";\n/**\n * Ckeditor Element\n */\nexport class CkeditorElement extends ObjectElement {\n    /**\n     * Constructor\n     * @param htmlElement html element\n     * @param bindData bind data\n     * @param context context\n     */\n    constructor(htmlElement, bindData, context) {\n        super(htmlElement, bindData, context);\n        this.editor = null; // CKEditor 인스턴스\n        this.internalValue = null; // 초기 setValue 저장\n        this.getHtmlElement().appendChild(this.createStyle());\n        // textarea\n        const textarea = document.createElement('textarea');\n        // textarea.style.height = this.getHtmlElement().style.height;\n        console.error(\"===========\", this.getHtmlElement().style.height);\n        htmlElement.appendChild(textarea);\n        // CKEditor initialization\n        let _this = this;\n        ClassicEditor\n            .create(textarea, {\n            extraPlugins: [DefaultUploadPlugin]\n        })\n            .then((editor) => {\n            this.editor = editor;\n            // set initial value\n            if (this.internalValue !== null) {\n                this.editor.setData(this.internalValue);\n            }\n            // blur event\n            editor.editing.view.document.on('blur', (evt, data) => {\n                if (editor.getData() !== this.internalValue) {\n                    this.internalValue = editor.getData();\n                    this.notifyPropertyChanged();\n                }\n            });\n            // double check\n            editor.ui.view.editable.element.addEventListener('blur', () => {\n                if (editor.getData() !== this.internalValue) {\n                    this.internalValue = editor.getData();\n                    this.notifyPropertyChanged();\n                }\n            });\n        })\n            .catch((error) => {\n            console.error('Error initializing CKEditor:', error);\n        });\n    }\n    /**\n     * Creates style\n     */\n    createStyle() {\n        let style = document.createElement('style');\n        style.innerHTML = `\n            .ck-editor {\n                display: flex;\n                flex-direction: column;\n                height: 100% !important;\n            }\n            .ck-editor__main {\n                flex: 1;\n            }\n            .ck-editor__editable_inline:not(.ck-comment__input *) {\n                height: 100%;\n            }\n        `;\n        return style;\n    }\n    /**\n     * Notifies property changed\n     */\n    notifyPropertyChanged() {\n        let element = this.getHtmlElement();\n        let data = this.getBindData();\n        let event = new PropertyChangingEvent(element, data, this.getProperty(), this.getValue(), this.getIndex());\n        this.notifyObservers(event);\n    }\n    /**\n     * Sets value\n     * @param value property value\n     */\n    setValue(value) {\n        this.internalValue = value;\n        if (this.editor) {\n            this.editor.setData(value !== null && value !== void 0 ? value : '');\n        }\n    }\n    /**\n     * Gets value\n     */\n    getValue() {\n        return this.internalValue;\n    }\n    /**\n     * Sets readonly\n     * @param readonly readonly or not\n     */\n    setReadonly(readonly) {\n        if (this.editor) {\n            if (readonly === true) {\n                this.editor.enableReadOnlyMode('readonly');\n            }\n            else {\n                this.editor.disableReadOnlyMode('readonly');\n            }\n        }\n    }\n    /**\n     * Sets disabled\n     * @param disabled disabled or not\n     */\n    setDisabled(disabled) {\n        if (this.editor) {\n            if (disabled === true) {\n                this.editor.enableReadOnlyMode('disabled');\n            }\n            else {\n                this.editor.disableReadOnlyMode('disabled');\n            }\n        }\n    }\n}\n/**\n * Default Upload Plugin\n */\nclass DefaultUploadPlugin {\n    constructor(editor) {\n        editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n            console.log(\"== loader\", loader);\n            return new DefaultUploadAdapter(loader);\n        };\n    }\n}\n/**\n * Default Upload Adapter\n */\nclass DefaultUploadAdapter {\n    constructor(loader) {\n        this.loader = loader;\n    }\n    upload() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.loader.file\n                .then((file) => new Promise((resolve, reject) => {\n                const reader = new FileReader();\n                reader.onload = () => {\n                    resolve({\n                        default: reader.result\n                    });\n                };\n                reader.onerror = error => {\n                    reject(error);\n                };\n                reader.readAsDataURL(file); // 🔥 Base64\n            }));\n        });\n    }\n}\n//# sourceMappingURL=CkeditorElement.js.map","import { Configuration, ElementRegistry, ObjectElementFactory } from \"duice\";\nimport { CkeditorElement } from \"./CkeditorElement\";\n/**\n * Ckeditor Factory\n */\nexport class CkeditorElementFactory extends ObjectElementFactory {\n    /**\n     * Creates element\n     * @param htmlElement html element\n     * @param bindData bind data\n     * @param context context\n     */\n    createElement(htmlElement, bindData, context) {\n        return new CkeditorElement(htmlElement, bindData, context);\n    }\n}\n/**\n * Static block\n */\n(() => {\n    // register\n    ElementRegistry.register(`${Configuration.getNamespace()}-ckeditor`, new CkeditorElementFactory());\n})();\n//# sourceMappingURL=CkeditorElementFactory.js.map"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","CkeditorElement","ObjectElement","constructor","htmlElement","bindData","context","super","this","editor","internalValue","getHtmlElement","appendChild","createStyle","textarea","document","createElement","console","error","style","height","ClassicEditor","create","extraPlugins","DefaultUploadPlugin","setData","editing","view","on","evt","data","getData","notifyPropertyChanged","ui","editable","element","addEventListener","catch","innerHTML","getBindData","event","PropertyChangingEvent","getProperty","getValue","getIndex","notifyObservers","setValue","setReadonly","readonly","enableReadOnlyMode","disableReadOnlyMode","setDisabled","disabled","plugins","get","createUploadAdapter","loader","log","DefaultUploadAdapter","upload","file","reader","FileReader","onload","default","onerror","readAsDataURL","CkeditorElementFactory","ObjectElementFactory","ElementRegistry","register","Configuration","getNamespace"],"mappings":"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"}