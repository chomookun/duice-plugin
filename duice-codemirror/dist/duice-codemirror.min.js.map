{"version":3,"file":"duice-codemirror.min.js","sources":["../../../duice/dist/event/DataEvent.js","../../../duice/dist/event/PropertyChangeEvent.js","Codemirror.js","CodemirrorFactory.js"],"sourcesContent":["export class DataEvent {\n    constructor(source) {\n        this.source = source;\n    }\n}\n//# sourceMappingURL=DataEvent.js.map","import { DataEvent } from \"./DataEvent\";\nexport class PropertyChangeEvent extends DataEvent {\n    constructor(source, property, value, index) {\n        super(source);\n        this.property = property;\n        this.value = value;\n        this.index = index;\n    }\n    getProperty() {\n        return this.property;\n    }\n    getValue() {\n        return this.value;\n    }\n    getIndex() {\n        return this.index;\n    }\n}\n//# sourceMappingURL=PropertyChangeEvent.js.map","import { getElementAttribute, ObjectElement } from \"duice\";\nimport { PropertyChangeEvent } from \"../../../duice/dist/event/PropertyChangeEvent\";\nexport class Codemirror extends ObjectElement {\n    constructor(element, bindData, context) {\n        super(element, bindData, context);\n        this.mode = 'text/x-markdown';\n        this.theme = 'default';\n        this.getHtmlElement().style.display = 'block';\n        // option\n        this.mode = getElementAttribute(element, 'mode') || this.mode;\n        this.theme = getElementAttribute(element, 'theme') || this.theme;\n        // config\n        let config = {\n            mode: this.mode,\n            inputStyle: 'textarea',\n            lineNumbers: true,\n            theme: this.theme,\n            extraKeys: { \"Enter\": \"newlineAndIndentContinueMarkdownList\" }\n        };\n        // textarea\n        let textarea = document.createElement('textarea');\n        this.getHtmlElement().appendChild(textarea);\n        // create code mirror\n        this.codeMirror = CodeMirror.fromTextArea(textarea, config);\n        this.codeMirror.setSize('100%', '100%');\n        // refresh (not working without setTimeout)\n        setTimeout(() => {\n            this.codeMirror.refresh();\n        }, 1);\n        // add change event listener\n        this.codeMirror.on(\"blur\", () => {\n            let event = new PropertyChangeEvent(this, this.getProperty(), this.getValue(), this.getIndex());\n            this.notifyObservers(event);\n        });\n    }\n    setValue(value) {\n        if (!value) {\n            value = '';\n        }\n        let scrollInfo = this.codeMirror.getScrollInfo();\n        this.codeMirror.doc.setValue(value);\n        this.codeMirror.scrollTo(scrollInfo.left, scrollInfo.top);\n    }\n    getValue() {\n        let value = this.codeMirror.doc.getValue();\n        if (!value) {\n            return null;\n        }\n        return value;\n    }\n    setReadonly(readonly) {\n        this.codeMirror.setOption('readOnly', readonly);\n    }\n}\n//# sourceMappingURL=Codemirror.js.map","import { Configuration, DataElementRegistry, ObjectElementFactory } from \"duice\";\nimport { Codemirror } from \"./Codemirror\";\nexport class CodemirrorFactory extends ObjectElementFactory {\n    createElement(htmlElement, bindData, context) {\n        return new Codemirror(htmlElement, bindData, context);\n    }\n}\n(() => {\n    // register\n    DataElementRegistry.register(`${Configuration.getNamespace()}-codemirror`, new CodemirrorFactory());\n})();\n//# sourceMappingURL=CodemirrorFactory.js.map"],"names":["DataEvent","constructor","source","this","PropertyChangeEvent","property","value","index","super","getProperty","getValue","getIndex","Codemirror","ObjectElement","element","bindData","context","mode","theme","getHtmlElement","style","display","getElementAttribute","config","inputStyle","lineNumbers","extraKeys","Enter","textarea","document","createElement","appendChild","codeMirror","CodeMirror","fromTextArea","setSize","setTimeout","refresh","on","event","notifyObservers","setValue","scrollInfo","getScrollInfo","doc","scrollTo","left","top","setReadonly","readonly","setOption","CodemirrorFactory","ObjectElementFactory","htmlElement","DataElementRegistry","register","Configuration","getNamespace"],"mappings":";;;;;;+CAAO,MAAMA,EACT,WAAAC,CAAYC,GACRC,KAAKD,OAASA,CACjB,ECFE,MAAME,UAA4BJ,EACrC,WAAAC,CAAYC,EAAQG,EAAUC,EAAOC,GACjCC,MAAMN,GACNC,KAAKE,SAAWA,EAChBF,KAAKG,MAAQA,EACbH,KAAKI,MAAQA,CAChB,CACD,WAAAE,GACI,OAAON,KAAKE,QACf,CACD,QAAAK,GACI,OAAOP,KAAKG,KACf,CACD,QAAAK,GACI,OAAOR,KAAKI,KACf,ECdE,MAAMK,UAAmBC,EAAAA,cAC5B,WAAAZ,CAAYa,EAASC,EAAUC,GAC3BR,MAAMM,EAASC,EAAUC,GACzBb,KAAKc,KAAO,kBACZd,KAAKe,MAAQ,UACbf,KAAKgB,iBAAiBC,MAAMC,QAAU,QAEtClB,KAAKc,KAAOK,sBAAoBR,EAAS,SAAWX,KAAKc,KACzDd,KAAKe,MAAQI,sBAAoBR,EAAS,UAAYX,KAAKe,MAE3D,IAAIK,EAAS,CACTN,KAAMd,KAAKc,KACXO,WAAY,WACZC,aAAa,EACbP,MAAOf,KAAKe,MACZQ,UAAW,CAAEC,MAAS,yCAGtBC,EAAWC,SAASC,cAAc,YACtC3B,KAAKgB,iBAAiBY,YAAYH,GAElCzB,KAAK6B,WAAaC,WAAWC,aAAaN,EAAUL,GACpDpB,KAAK6B,WAAWG,QAAQ,OAAQ,QAEhCC,YAAW,KACPjC,KAAK6B,WAAWK,SAAS,GAC1B,GAEHlC,KAAK6B,WAAWM,GAAG,QAAQ,KACvB,IAAIC,EAAQ,IAAInC,EAAoBD,KAAMA,KAAKM,cAAeN,KAAKO,WAAYP,KAAKQ,YACpFR,KAAKqC,gBAAgBD,EAAM,GAElC,CACD,QAAAE,CAASnC,GACAA,IACDA,EAAQ,IAEZ,IAAIoC,EAAavC,KAAK6B,WAAWW,gBACjCxC,KAAK6B,WAAWY,IAAIH,SAASnC,GAC7BH,KAAK6B,WAAWa,SAASH,EAAWI,KAAMJ,EAAWK,IACxD,CACD,QAAArC,GACI,IAAIJ,EAAQH,KAAK6B,WAAWY,IAAIlC,WAChC,OAAKJ,GACM,IAGd,CACD,WAAA0C,CAAYC,GACR9C,KAAK6B,WAAWkB,UAAU,WAAYD,EACzC,EClDE,MAAME,UAA0BC,EAAAA,qBACnC,aAAAtB,CAAcuB,EAAatC,EAAUC,GACjC,OAAO,IAAIJ,EAAWyC,EAAatC,EAAUC,EAChD,SAIDsC,sBAAoBC,SAAS,GAAGC,gBAAcC,4BAA6B,IAAIN"}